<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <script src="blockly/blockly_compressed.js"></script>
    <script src="blockly/blocks_compressed.js"></script>
    <script src="blockly/javascript_compressed.js"></script>
    <script src="blockly/msg/js/en.js"></script>
    <script src="blockly/custom-blocks.js"></script>
    <link rel="stylesheet" href="/style/style.css">
    <title></title>
  </head>
  <body>
    <h1>App Code</h1>
    <p></p>
      <button id="btnRun" onclick="runCode()">Run</button>
      <button type="button" onclick="saveProject()">Save</button>
      <button type="button" onclick="loadProject()">Load</button>
    <p></p>
    <div id="blocklyArea">
      <div id="blocklyDiv" style="position: absolute"></div>
    </div>

    <xml id="toolbox" style="display: none">
        <category name="Loops" colour="%{BKY_LOOPS_HUE}">
          <block type="controls_repeat_ext">
            <value name="TIMES">
              <block type="math_number">
                <field name="NUM">10</field>
              </block>
            </value>
          </block>
          <block type="controls_whileUntil"></block>
        </category>
        <category name="Logic" colour="%{BKY_LOGIC_HUE}">
          <block type="controls_if"></block>
          <block type="logic_compare"></block>
          <block type="logic_operation"></block>
          <block type="logic_negate"></block>
          <block type="logic_boolean"></block>
        </category>
        <category name="Math" colour="%{BKY_MATH_HUE}">
          <block type="math_number">
            <field name="NUM">123</field>
          </block>
          <block type="math_arithmetic"></block>
          <block type="math_single"></block>
        </category>
        <category name="Happy Code Blocks" colour="90">
          <block type="definir-cor"></block>
          <block type='element_color'></block>
        </category>
        <category name="Assets" colour="120">
          <div id="ball"></div>
          <div id="ball"></div>
        </category>
    </xml>

    <script>
      var blocklyArea = document.getElementById('blocklyArea');
      var blocklyDiv = document.getElementById('blocklyDiv');
      var workspace = Blockly.inject(blocklyDiv,
        {toolbox: document.getElementById('toolbox')});
      var onresize = function(e) {
    // Compute the absolute coordinates and dimensions of blocklyArea.
        var element = blocklyArea;
        var x = 0;
        var y = 0;
        do {
          x += element.offsetLeft;
          y += element.offsetTop;
          element = element.offsetParent;
        } while (element);
      // Position blocklyDiv over blocklyArea.
        blocklyDiv.style.left = x + 'px';
        blocklyDiv.style.top = y + 'px';
        blocklyDiv.style.width = blocklyArea.offsetWidth + 'px';
        blocklyDiv.style.height = blocklyArea.offsetHeight + 'px';
        Blockly.svgResize(workspace);
      };
      window.addEventListener('resize', onresize, false);
      onresize();
      Blockly.svgResize(workspace);
    </script>
    <script>
      //Função para Rodar o Código JavaScript
      function runCode() {
        console.log('Run code CLicked');
        // Generate JavaScript code and run it.
        Blockly.JavaScript.addReservedWords('code');
        window.LoopTrap = 1000;
        Blockly.JavaScript.INFINITE_LOOP_TRAP =
            'if (--window.LoopTrap == 0) throw "Infinite loop.";\n';
        var code = Blockly.JavaScript.workspaceToCode(workspace);
        Blockly.JavaScript.INFINITE_LOOP_TRAP = null;
        try {
          eval(code);
        } catch (e) {
          alert(e);
        }
      }

      var project = {xml: '', txt: ''}
      console.log(project);

      function saveProject() {
        console.log('Save Project clicked');
        project.xml = Blockly.Xml.workspaceToDom(workspace);
        project.txt = Blockly.Xml.domToPrettyText(project.xml);

        console.log(project, 'project');

      }


      function loadProject() {
        console.log('Load Project Clicked');
        var xml = Blockly.Xml.textToDom(project.txt);
        console.log(xml, 'this is xml');
        Blockly.Xml.domToWorkspace(xml, workspace);
      }
    </script>
  </body>
</html>
